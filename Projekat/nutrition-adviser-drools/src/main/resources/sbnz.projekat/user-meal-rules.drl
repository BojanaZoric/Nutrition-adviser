/*
	Da li je obrok pogodan za korisnika zbog zdravstvenog stanja
*/

package sbnz.projekat;
import sbnz.projekat.nutritionadviser.model.*;
/*import sbnz.projekat.nutritionadviser.model.Meal;
import sbnz.projekat.nutritionadviser.model.Grocerie;*/
import java.util.*;

agenda-group "user-meal"

query "Get alarm"
	$alarm: Alarm()
end


rule "User has allergie grocerie"
	when 
		$user: UserData($allergies: allergies)
		$grocerie: Grocerie($alls: allergens)
		$retVal: Number(intValue > 0) from accumulate (
		$a: Allergen(
			$allergies contains this
		) from $alls,
		count($a)
	)
	then
	System.out.println("Alergican " + $retVal);
	insert(new Alarm(null, null, "Korisnik je alergican na ovu namirnicu"));
end


rule "User has allergie to meal"
	when 
		$user: UserData($allergies: allergies)
		$meal: Meal($alls: getAllergens())
		$retVal: Number(intValue > 0) from accumulate (
		$a: Allergen(
			$allergies contains this
		) from $alls,
		count($a)
	)
	then
	System.out.println("Alergican na obrok " + $retVal);
	insert(new Alarm(null, $meal, "Korisnik je alergican na neki od sastojaka obroka"));
end

rule "Has diabetes"
	when 
		$user: UserData(diabetes==true)
		$meal: Meal($groceries: getComponents())
		$retVal: Number(intValue > 0) from accumulate (
		$groc: Grocerie(
			diabetes == false
		) from $groceries,
		count($groc)
	)
	then
		System.out.println("Diabetes");
		insert(new Alarm(null, $meal, "Ovaj obrok sadrzi namirnice koje nisu pogodne za dijabeticare"));
end


rule "Has heart disease"
	when 
		$user: UserData(heartDisease==true)
		$meal: Meal($groceries: getComponents())
		$retVal: Number(intValue > 0) from accumulate (
		$groc: Grocerie(
			heartDisease == false
		) from $groceries,
		count($groc)
	)
	then
		System.out.println("Bolest srca");
		insert(new Alarm(null, $meal, "Ovaj obrok sadrzi namirnice koje nisu pogodne za ljude sa bolestima srca"));

end

rule "Has high blood pressure"
	when 
		$user: UserData(highBloodPressure==true)
		$meal: Meal($groceries: getComponents())
		$retVal: Number(intValue > 0) from accumulate (
		$groc: Grocerie(
			highBloodPressure == false
		) from $groceries,
		count($groc)
	)
	then
		insert(new Alarm(null, $meal, "Ovaj obrok sadrzi namirnice koje nisu pogodne za ljude sa visokim krvnim pritiskom"));
 
end

